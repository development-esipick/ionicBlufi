{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/in-app-purchase-2/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Cordova, CordovaProperty, IonicNativePlugin, Plugin } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\n\n/**\n * @name In App Purchase 2\n * @description\n * In-App Purchase for Cordova on iOS, Android and Windows\n *\n * @usage\n * ```typescript\n * import { InAppPurchase2 } from '@ionic-native/in-app-purchase-2';\n *\n * constructor(private store: InAppPurchase2) { }\n *\n * ...\n * ```\n *\n *  * @advanced\n *\n *  ```typescript\n *    // After Platform Ready\n *    this.store.verbosity = this.store.DEBUG;\n *    this.store.register({\n *      id: productId,\n *      alias: productId,\n *      type: this.store.NON_RENEWING_SUBSCRIPTION\n *    });\n *\n *    // Register Event Handlers for the specific product\n *   this.store.when(productId).registered( (product: IAPProduct) => {\n *     console.log('Registered: ' + JSON.stringify(product));\n *   });\n *\n *    // Updated\n *    this.store.when(productId).updated( (product: IAPProduct) => {\n *      console.log('Loaded' + JSON.stringify(product));\n *    });\n *\n *    // Issue with buying\n *     this.store.when(productId).cancelled( (product) => {\n *         alert('Purchase was Cancelled');\n *     });\n *\n *      // Track All Store Errors\n *     this.store.error( (err) => {\n *       alert('Store Error ' + JSON.stringify(err));\n *     });\n *\n *     this.store.ready(() =>  {\n *       console.log(JSON.stringify(this.store.get(productId)));\n *       console.log('Store is Ready: ' + JSON.stringify(status));\n *       console.log('Products: ' + JSON.stringify(this.store.products));\n *     });\n *\n *\n *     // Errors\n *     this.store.when(productId).error( (error) => {\n *       this.loader.dismiss();\n *       alert('An Error Occured' + JSON.stringify(error));\n *     });\n *     // Refresh Starts Handlers\n *     console.log('Refresh Store');\n *     this.store.refresh();\n *\n *    ...\n *\n *    // To Purchase\n *    this.store.order(productId);\n *\n * ```\n *\n */\n\nexport interface IAPProductOptions {\n  id: string;\n  alias: string;\n  type: string;\n}\n\nexport type IAPProducts = IAPProduct[] & {\n  /**\n   * Get product by ID\n   */\n  byId: { [id: string]: IAPProduct; };\n  /**\n   * Get product by alias\n   */\n  byAlias: { [alias: string]: IAPProduct; };\n  /**\n   * Remove all products (for testing only).\n   */\n  reset: () => {};\n};\n\nexport type IAPQueryCallback = ((product: IAPProduct) => void) | ((error: IAPError) => void);\n\nexport interface IAPProduct {\n\n  id: string;\n\n  alias: string;\n\n  type: string;\n\n  state: string;\n\n  title: string;\n\n  description: string;\n\n  priceMicros: string;\n\n  price: string;\n\n  currency: string;\n\n  loaded: boolean;\n\n  valid: boolean;\n\n  canPurchase: boolean;\n\n  owned: boolean;\n\n  downloading: boolean;\n\n  downloaded: boolean;\n\n  additionalData: any;\n\n  transaction: any;\n\n  finish(): void;\n\n  verify(): any;\n\n  set(key: string, value: any): void;\n\n  stateChanged(): void;\n\n  on(event: string, callback: Function): void;\n\n  once(event: string, callback: Function): void;\n\n  off(callback: Function): void;\n\n  trigger(action: string, args: any): void;\n\n}\n\nexport interface IAPProductEvents {\n  loaded: (callback: IAPQueryCallback) => void;\n  updated: (callback: IAPQueryCallback) => void;\n  error: (callback: IAPQueryCallback) => void;\n  approved: (callback: IAPQueryCallback) => void;\n  owned: (callback: IAPQueryCallback) => void;\n  cancelled: (callback: IAPQueryCallback) => void;\n  refunded: (callback: IAPQueryCallback) => void;\n  registered: (callback: IAPQueryCallback) => void;\n  valid: (callback: IAPQueryCallback) => void;\n  invalid: (callback: IAPQueryCallback) => void;\n  requested: (callback: IAPQueryCallback) => void;\n  initiated: (callback: IAPQueryCallback) => void;\n  finished: (callback: IAPQueryCallback) => void;\n  verified: (callback: IAPQueryCallback) => void;\n  unverified: (callback: IAPQueryCallback) => void;\n  expired: (callback: IAPQueryCallback) => void;\n  downloading: (product: IAPProduct, progress: any, time_remaining: any) => void;\n  downloaded: (callback: IAPQueryCallback) => void;\n}\n\n/**\n * @hidden\n */\nexport class IAPError {\n  code: number;\n  message: string;\n}\n\n/**\n * @name In App Purchase 2\n * @description\n *\n * @usage\n * ```\n * import { InAppPurchase2 } from '@ionic-native/in-app-purchase-2';\n *\n *\n * constructor(private inAppPurchase2: InAppPurchase2) { }\n *\n * ...\n *\n *\n * ```\n */\n@Plugin({\n  pluginName: 'InAppPurchase2',\n  plugin: 'cc.fovea.cordova.purchase',\n  pluginRef: 'store',\n  repo: 'https://github.com/j3k0/cordova-plugin-purchase',\n  platforms: ['iOS', 'Android', 'Windows'],\n  install: 'ionic cordova plugin add cc.fovea.cordova.purchase --variable BILLING_KEY=\"<ANDROID_BILLING_KEY>\"'\n})\n@Injectable()\nexport class InAppPurchase2 extends IonicNativePlugin {\n\n  @CordovaProperty\n  QUIET: number;\n\n  @CordovaProperty\n  ERROR: number;\n\n  @CordovaProperty\n  WARNING: number;\n\n  @CordovaProperty\n  INFO: number;\n\n  @CordovaProperty\n  DEBUG: number;\n\n  /**\n   * Debug level. Use QUIET, ERROR, WARNING, INFO or DEBUG constants\n   */\n  @CordovaProperty\n  verbosity: number;\n\n  /**\n   * Set to true to invoke the platform purchase sandbox. (Windows only)\n   */\n  @CordovaProperty\n  sandbox: boolean;\n\n  @CordovaProperty\n  FREE_SUBSCRIPTION: string;\n\n  @CordovaProperty\n  PAID_SUBSCRIPTION: string;\n\n  @CordovaProperty\n  NON_RENEWING_SUBSCRIPTION: string;\n\n  @CordovaProperty\n  CONSUMABLE: string;\n\n  @CordovaProperty\n  NON_CONSUMABLE: string;\n\n\n  @CordovaProperty\n  ERR_SETUP: number;\n\n  @CordovaProperty\n  ERR_LOAD: number;\n\n  @CordovaProperty\n  ERR_PURCHASE: number;\n\n  @CordovaProperty\n  ERR_LOAD_RECEIPTS: number;\n\n  @CordovaProperty\n  ERR_CLIENT_INVALID: number;\n\n  @CordovaProperty\n  ERR_PAYMENT_CANCELLED: number;\n\n  @CordovaProperty\n  ERR_PAYMENT_INVALID: number;\n\n  @CordovaProperty\n  ERR_PAYMENT_NOT_ALLOWED: number;\n\n  @CordovaProperty\n  ERR_UNKNOWN: number;\n\n  @CordovaProperty\n  ERR_REFRESH_RECEIPTS: number;\n\n  @CordovaProperty\n  ERR_INVALID_PRODUCT_ID: number;\n\n  @CordovaProperty\n  ERR_FINISH: number;\n\n  @CordovaProperty\n  ERR_COMMUNICATION: number;\n\n  @CordovaProperty\n  ERR_SUBSCRIPTIONS_NOT_AVAILABLE: number;\n\n  @CordovaProperty\n  ERR_MISSING_TOKEN: number;\n\n  @CordovaProperty\n  ERR_VERIFICATION_FAILED: number;\n\n  @CordovaProperty\n  ERR_BAD_RESPONSE: number;\n\n  @CordovaProperty\n  ERR_REFRESH: number;\n\n  @CordovaProperty\n  ERR_PAYMENT_EXPIRED: number;\n\n  @CordovaProperty\n  ERR_DOWNLOAD: number;\n\n  @CordovaProperty\n  ERR_SUBSCRIPTION_UPDATE_NOT_AVAILABLE: number;\n\n\n  @CordovaProperty\n  REGISTERED: string;\n\n  @CordovaProperty\n  INVALID: string;\n\n  @CordovaProperty\n  VALID: string;\n\n  @CordovaProperty\n  REQUESTED: string;\n\n  @CordovaProperty\n  INITIATED: string;\n\n  @CordovaProperty\n  APPROVED: string;\n\n  @CordovaProperty\n  FINISHED: string;\n\n  @CordovaProperty\n  OWNED: string;\n\n  @CordovaProperty\n  DOWNLOADING: string;\n\n  @CordovaProperty\n  DOWNLOADED: string;\n\n\n  @CordovaProperty\n  INVALID_PAYLOAD: number;\n\n  @CordovaProperty\n  CONNECTION_FAILED: number;\n\n  @CordovaProperty\n  PURCHASE_EXPIRED: number;\n\n  @CordovaProperty\n  products: IAPProducts;\n\n  @CordovaProperty\n  validator: string | ((product: string | IAPProduct, callback: Function) => void);\n\n  @CordovaProperty\n  log: {\n    error: (message: string) => void;\n    warn: (message: string) => void;\n    info: (message: string) => void;\n    debug: (message: string) => void;\n  };\n\n  /**\n   * Get product by id or alias\n   * @param idOrAlias\n   */\n  @Cordova({ sync: true })\n  get(idOrAlias: string): IAPProduct { return; }\n\n  /**\n   * Register error handler\n   * @param onError {Function} function to call on error\n   */\n  @Cordova({ sync: true })\n  error(onError: Function): void {}\n\n  /**\n   * Add or register a product\n   * @param product {IAPProductOptions}\n   */\n  @Cordova({ sync: true })\n  register(product: IAPProductOptions): void {}\n\n  /**\n   *\n   * @param query\n   * @param event\n   * @param callback\n   * @return {IAPProductEvents}\n   */\n  @Cordova({ sync: true })\n  when(query: string | IAPProduct, event?: string, callback?: IAPQueryCallback): IAPProductEvents { return; }\n\n  /**\n   * Identical to `when`, but the callback will be called only once. After being called, the callback will be unregistered.\n   * @param query {string | IAPProduct}\n   * @param [event] {event}\n   * @param [callback] {IAPQueryCallback}\n   * @return {IAPProductEvents}\n   */\n  @Cordova({ sync: true })\n  once(query: string | IAPProduct, event?: string, callback?: IAPQueryCallback): IAPProductEvents { return; }\n\n  /**\n   * Unregister a callback. Works for callbacks registered with ready, when, once and error.\n   * @param callback {Function}\n   */\n  @Cordova({ sync: true })\n  off(callback: Function): void {}\n\n  @Cordova({ sync: true })\n  order(product: string | IAPProduct, additionalData?: any): { then: Function; error: Function; } { return; }\n\n  @Cordova()\n  ready(callback: Function): void { return; }\n\n  @Cordova({ sync: true })\n  refresh(): void {}\n\n}\n"]}